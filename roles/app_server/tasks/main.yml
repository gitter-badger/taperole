- name: Install unicorn upstart script
  template: src=unicorn_upstart.j2
            dest=/etc/init/unicorn_{{ app_name}}.conf
  register: unicorn_upstart_installation
  tags: [configure_unicorn]

- name: register unicorn upstart script
  command: initctl reload-configuration
  when: unicorn_upstart_installation.changed
  tags: [configure_unicorn]

- name: Set up unicorn log dir
  file: path={{app_path}}/log state=directory owner={{deployer_user}}
  tags: [configure_unicorn]

- name: Install unicorn config
  template: src=unicorn.rb.j2
            dest={{app_path}}/config/unicorn.rb
  tags: [configure_unicorn]

- name: Set up db config
  template: src=database.yml.j2 dest={{app_path}}/config/database.yml
  
- name: Install v8
  apt: name=nodejs state=present

# zzet.rbenv puts all the rbenv stuff in profile for some reason
# so we gotta use login shells to do this stuff
- name: Install bundle gems
  remote_user: deployer
  command: chdir={{ app_path }}
           bash -lc "RAILS_ENV={{app_env}} bundle install --path vendor/bundle"
  tags: [deploy bundle]
  when: app_checkout.changed

- name: Ensure env_config.yml file present
  stat: path={{ app_path }}/config/env_config.yml
  register: env_config_file
  tags: [deploy]

- name: Put env_config.yml
  template: src=env_config.yml.j2
            dest={{app_path}}/config/env_config.yml
            owner={{deployer_user}}
  when: env_config_file.stat.exists != true
  tags: [deploy]

- name: Migrate DB
  remote_user: deployer
  command: chdir={{ app_path }}
           bash -lc "bundle exec rake db:migrate RAILS_ENV={{app_env}}"
  run_once: true
  tags: [deploy, migrate]
  when: (app_checkout is defined and app_checkout.changed) or rake.force_migrate 

- name: Seed DB
  remote_user: deployer
  command: chdir={{ app_path }}
           bash -lc "bundle exec rake db:seed RAILS_ENV={{app_env}}"
  run_once: true
  tags: [deploy, seed]
  when: (app_checkout is defined and app_checkout.changed) or rake.force_seed

- name: Ensure tmp dir present for unicorn pids
  file: state=directory path={{app_path}}/tmp/unicorn owner=deployer
  tags: [deploy]

- name: reload unicorn
  service: name=unicorn_{{app_name}} state=reloaded
  tags: [deploy, unicorn_reload]
  when: app_checkout.changed or unicorn.force_reload

- name: restart unicorn
  service: name=unicorn_{{app_name}} state=restarted
  tags: [unicorn_restart]
  when: unicorn.force_restart
